// GRID WORLD MODEL OF ROBOT AND JANITOR
// Based on Hakan Younes/gxn/dxp 04/05/04

mdp

// CONSTANTS
const int n; // size of the grid
const double jr; // janitor movement probability

const double jd = jr / 4;

module collision
  [collide] (x1 = x2) & (y1 = y2) -> true;
  [step] (x1 != x2) | (y1 != y2) -> true;
endmodule

module robot
  x1 : [1..n] init 1; // x position of robot
  y1 : [1..n] init 1; // y position of robot

  [collide] true -> 1 : (x1'=1) & (y1'=1);

  [step] true -> 1 : true;
  [step] x1<n -> 1 : (x1'=x1+1);
  [step] x1>1 -> 1 : (x1'=x1-1);
  [step] y1<n -> 1 : (y1'=y1+1);
  [step] y1>1 -> 1 : (y1'=y1-1);
endmodule

module janitor
  x2 : [1..n] init n; // x position of janitor
  y2 : [1..n] init n; // y position of janitor
	 
  [collide] true -> 1 : (x2'=n) & (y2'=n);

  [step] true -> jd : (x2'=min(x2+1,n)) +
                 jd : (x2'=max(x2-1,1)) +
                 jd : (y2'=min(y2+1,n)) +
                 jd : (y2'=max(y2-1,1)) +
                 (1 - jr) : true;
endmodule


label "station" = x1=n & y1=n;
